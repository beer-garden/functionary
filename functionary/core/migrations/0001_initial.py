# Generated by Django 4.2.1 on 2023-08-07 17:00

import core.models.function
import core.models.mixins
import core.models.task_output
import core.models.user_file
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.serializers.json
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("django_celery_beat", "0018_improve_crontab_helptext"),
        ("contenttypes", "0002_remove_content_type_name"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        db_index=True,
                        max_length=64,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                    ),
                ),
                (
                    "distinguished_name",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                ("password", models.CharField(max_length=255)),
                ("first_name", models.CharField(max_length=64)),
                ("last_name", models.CharField(max_length=64)),
                ("email", models.CharField(blank=True, default="", max_length=64)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "last_login",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("preferences", models.JSONField(default=dict)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Environment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name="Function",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(editable=False, max_length=64)),
                ("display_name", models.CharField(max_length=64, null=True)),
                ("summary", models.CharField(max_length=128, null=True)),
                ("description", models.TextField(null=True)),
                (
                    "variables",
                    models.JSONField(
                        default=list, validators=[core.models.function.list_of_strings]
                    ),
                ),
                ("return_type", models.CharField(max_length=64, null=True)),
                ("active", models.BooleanField(default=True)),
                (
                    "environment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.environment",
                    ),
                ),
            ],
            bases=(core.models.mixins.ModelSaveHookMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ScheduledTask",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("tasked_id", models.UUIDField()),
                (
                    "parameters",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("ACTIVE", "Active"),
                            ("PAUSED", "Paused"),
                            ("ERROR", "Error"),
                            ("ARCHIVED", "Archived"),
                        ],
                        default="PENDING",
                        max_length=16,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "environment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.environment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("tasked_id", models.UUIDField()),
                (
                    "parameters",
                    models.JSONField(
                        encoder=django.core.serializers.json.DjangoJSONEncoder
                    ),
                ),
                ("return_type", models.CharField(max_length=64, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETE", "Complete"),
                            ("ERROR", "Error"),
                        ],
                        default="PENDING",
                        max_length=16,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("comment", models.TextField(blank=True, null=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "environment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.environment",
                    ),
                ),
                (
                    "scheduled_task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.scheduledtask",
                    ),
                ),
                (
                    "tasked_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=64, unique=True)),
            ],
            bases=(core.models.mixins.ModelSaveHookMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Workflow",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("active", models.BooleanField(default=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "environment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.environment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaskLog",
            fields=[
                (
                    "task",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="core.task",
                    ),
                ),
                (
                    "file",
                    models.FileField(upload_to=core.models.task_output._get_upload_to),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TaskResult",
            fields=[
                (
                    "task",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="core.task",
                    ),
                ),
                (
                    "file",
                    models.FileField(upload_to=core.models.task_output._get_upload_to),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkflowStep",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=64,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Invalid step name. Only numbers, letters, and underscore are allowed.",
                                regex="^\\w+$",
                            )
                        ],
                    ),
                ),
                ("tasked_id", models.UUIDField()),
                ("parameter_template", models.TextField(blank=True, null=True)),
                (
                    "next",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.workflowstep",
                    ),
                ),
                (
                    "tasked_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.workflow"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WorkflowRunStep",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("step_name", models.CharField(max_length=64)),
                ("step_order", models.IntegerField()),
                (
                    "step_task",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="workflow_run_step",
                        to="core.task",
                    ),
                ),
                (
                    "workflow_step",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.workflowstep",
                    ),
                ),
                (
                    "workflow_task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="steps",
                        to="core.task",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WorkflowParameter",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=64,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Invalid parameter name. Only numbers, letters, and underscore are allowed.",
                                regex="^\\w+$",
                            )
                        ],
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "parameter_type",
                    models.CharField(
                        choices=[
                            ("boolean", "boolean"),
                            ("date", "date"),
                            ("datetime", "datetime"),
                            ("file", "file"),
                            ("float", "float"),
                            ("integer", "integer"),
                            ("json", "json"),
                            ("string", "string"),
                            ("text", "text"),
                        ],
                        max_length=64,
                    ),
                ),
                ("default", models.CharField(blank=True, max_length=128, null=True)),
                ("required", models.BooleanField(default=False)),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.workflow"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Variable",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Invalid variable name. Characters must be in [A-Z0-9_]",
                                regex="^[A-Z_][A-Z0-9_]*$",
                            )
                        ],
                    ),
                ),
                ("description", models.TextField(null=True)),
                ("value", models.TextField(max_length=32767)),
                ("protect", models.BooleanField(default=False)),
                (
                    "environment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vars",
                        to="core.environment",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vars",
                        to="core.team",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserFile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                (
                    "file",
                    models.FileField(upload_to=core.models.user_file._get_upload_to),
                ),
                ("public", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "environment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.environment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TeamUserRole",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("READ_ONLY", "read_only"),
                            ("OPERATOR", "operator"),
                            ("DEVELOPER", "developer"),
                            ("ADMIN", "admin"),
                        ],
                        max_length=64,
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_roles",
                        to="core.team",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="scheduledtask",
            name="most_recent_task",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="core.task",
            ),
        ),
        migrations.AddField(
            model_name="scheduledtask",
            name="periodic_task",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="django_celery_beat.periodictask",
            ),
        ),
        migrations.AddField(
            model_name="scheduledtask",
            name="tasked_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="contenttypes.contenttype",
            ),
        ),
        migrations.CreateModel(
            name="Package",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("display_name", models.CharField(max_length=64, null=True)),
                ("summary", models.CharField(max_length=128, null=True)),
                ("description", models.TextField(null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("COMPLETE", "Complete"),
                            ("ACTIVE", "Active"),
                            ("DISABLED", "Disabled"),
                        ],
                        default="PENDING",
                        max_length=16,
                    ),
                ),
                ("language", models.CharField(max_length=64)),
                ("image_name", models.CharField(max_length=256)),
                (
                    "environment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.environment",
                    ),
                ),
            ],
            bases=(core.models.mixins.ModelSaveHookMixin, models.Model),
        ),
        migrations.CreateModel(
            name="FunctionParameter",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=64,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Invalid parameter name. Only numbers, letters, and underscore are allowed.",
                                regex="^\\w+$",
                            )
                        ],
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "parameter_type",
                    models.CharField(
                        choices=[
                            ("boolean", "boolean"),
                            ("date", "date"),
                            ("datetime", "datetime"),
                            ("file", "file"),
                            ("float", "float"),
                            ("integer", "integer"),
                            ("json", "json"),
                            ("string", "string"),
                            ("text", "text"),
                        ],
                        max_length=64,
                    ),
                ),
                ("default", models.CharField(blank=True, max_length=128, null=True)),
                ("required", models.BooleanField(default=False)),
                (
                    "function",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.function"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="function",
            name="package",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="functions",
                to="core.package",
            ),
        ),
        migrations.CreateModel(
            name="EnvironmentUserRole",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("READ_ONLY", "read_only"),
                            ("OPERATOR", "operator"),
                            ("DEVELOPER", "developer"),
                            ("ADMIN", "admin"),
                        ],
                        max_length=64,
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "environment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_roles",
                        to="core.environment",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="environment",
            name="team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="environments",
                to="core.team",
            ),
        ),
        migrations.AddIndex(
            model_name="workflowstep",
            index=models.Index(
                fields=["workflow", "tasked_type", "tasked_id"], name="ws_contenttype"
            ),
        ),
        migrations.AddConstraint(
            model_name="workflowstep",
            constraint=models.UniqueConstraint(
                fields=("workflow", "name"), name="ws_workflow_name_unique_together"
            ),
        ),
        migrations.AddConstraint(
            model_name="workflowparameter",
            constraint=models.UniqueConstraint(
                fields=("workflow", "name"), name="wp_workflow_name_unique"
            ),
        ),
        migrations.AddIndex(
            model_name="workflow",
            index=models.Index(
                fields=["environment", "creator"], name="workflow_environment_creator"
            ),
        ),
        migrations.AddIndex(
            model_name="workflow",
            index=models.Index(
                fields=["environment", "created_at"], name="workflow_created_at"
            ),
        ),
        migrations.AddConstraint(
            model_name="workflow",
            constraint=models.UniqueConstraint(
                fields=("environment", "name"),
                name="workflow_environment_name_unique_together",
            ),
        ),
        migrations.AddConstraint(
            model_name="variable",
            constraint=models.UniqueConstraint(
                fields=("environment", "name"),
                name="environment_variable_name_unique_together",
            ),
        ),
        migrations.AddConstraint(
            model_name="variable",
            constraint=models.UniqueConstraint(
                fields=("team", "name"), name="team_variable_name_unique_together"
            ),
        ),
        migrations.AddConstraint(
            model_name="variable",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("environment__isnull", False), ("team__isnull", True)),
                    models.Q(("environment__isnull", True), ("team__isnull", False)),
                    _connector="OR",
                ),
                name="variable_only_one_team_or_environment",
            ),
        ),
        migrations.AddIndex(
            model_name="userfile",
            index=models.Index(
                condition=models.Q(("public", True)),
                fields=["environment", "public", "name"],
                name="uf_env_public_name",
            ),
        ),
        migrations.AddIndex(
            model_name="userfile",
            index=models.Index(
                fields=["environment", "creator", "name"], name="uf_env_creator_name"
            ),
        ),
        migrations.AddIndex(
            model_name="userfile",
            index=models.Index(
                fields=["environment", "created_at"], name="uf_env_type_creator"
            ),
        ),
        migrations.AddConstraint(
            model_name="teamuserrole",
            constraint=models.UniqueConstraint(
                fields=("user", "team"), name="unique_user_team"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["environment", "tasked_type", "tasked_id", "created_at"],
                name="task_contenttype",
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["environment", "status", "created_at"],
                name="task_environment_status",
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["environment", "creator", "created_at"],
                name="task_environment_creator",
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["environment", "created_at"], name="task_environment_created_at"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["environment", "updated_at"], name="task_environment_updated_at"
            ),
        ),
        migrations.AddIndex(
            model_name="scheduledtask",
            index=models.Index(
                fields=["environment", "tasked_type", "tasked_id"],
                name="s_task_contenttype",
            ),
        ),
        migrations.AddIndex(
            model_name="scheduledtask",
            index=models.Index(
                fields=["environment", "creator"], name="s_task_environment_creator"
            ),
        ),
        migrations.AddIndex(
            model_name="scheduledtask",
            index=models.Index(
                fields=["environment", "created_at"],
                name="s_task_environment_created_at",
            ),
        ),
        migrations.AddIndex(
            model_name="scheduledtask",
            index=models.Index(
                fields=["environment", "updated_at"],
                name="s_task_environment_updated_at",
            ),
        ),
        migrations.AddConstraint(
            model_name="package",
            constraint=models.UniqueConstraint(
                fields=("environment", "name"), name="environment_name_unique_together"
            ),
        ),
        migrations.AddConstraint(
            model_name="functionparameter",
            constraint=models.UniqueConstraint(
                fields=("function", "name"), name="fp_function_name_unique"
            ),
        ),
        migrations.AddIndex(
            model_name="function",
            index=models.Index(
                fields=["environment", "name"], name="function_environment_name"
            ),
        ),
        migrations.AddConstraint(
            model_name="function",
            constraint=models.UniqueConstraint(
                fields=("package", "name"), name="package_name_unique_together"
            ),
        ),
        migrations.AddConstraint(
            model_name="environmentuserrole",
            constraint=models.UniqueConstraint(
                fields=("user", "environment"), name="unique_user_environment"
            ),
        ),
        migrations.AddConstraint(
            model_name="environment",
            constraint=models.UniqueConstraint(
                fields=("team", "name"), name="team_name_unique_together"
            ),
        ),
    ]
