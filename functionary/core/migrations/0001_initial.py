# Generated by Django 4.1.1 on 2022-10-18 17:29

import uuid

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.serializers.json
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import core.models.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        db_index=True,
                        max_length=64,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                    ),
                ),
                ("password", models.CharField(max_length=255)),
                ("first_name", models.CharField(max_length=64)),
                ("last_name", models.CharField(max_length=64)),
                ("email", models.CharField(blank=True, default="", max_length=64)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "last_login",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Environment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("default", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Function",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("display_name", models.CharField(max_length=64, null=True)),
                ("summary", models.CharField(max_length=128, null=True)),
                ("description", models.TextField(null=True)),
                ("return_type", models.CharField(max_length=64, null=True)),
                ("output_format", models.CharField(max_length=64, null=True)),
                ("schema", models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(
                        encoder=django.core.serializers.json.DjangoJSONEncoder
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETE", "Complete"),
                            ("ERROR", "Error"),
                        ],
                        default="PENDING",
                        max_length=16,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "environment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.environment",
                    ),
                ),
                (
                    "function",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.function"
                    ),
                ),
            ],
            bases=(core.models.mixins.ModelSaveHookMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=64, unique=True)),
            ],
            bases=(core.models.mixins.ModelSaveHookMixin, models.Model),
        ),
        migrations.CreateModel(
            name="TaskLog",
            fields=[
                (
                    "task",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="core.task",
                    ),
                ),
                ("log", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="TaskResult",
            fields=[
                (
                    "task",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="core.task",
                    ),
                ),
                ("result", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="TeamUserRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("ADMIN", "admin"),
                            ("DEVELOPER", "developer"),
                            ("OPERATOR", "operator"),
                            ("READ_ONLY", "read_only"),
                        ],
                        max_length=64,
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_roles",
                        to="core.team",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Package",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("display_name", models.CharField(max_length=64, null=True)),
                ("summary", models.CharField(max_length=128, null=True)),
                ("description", models.TextField(null=True)),
                ("language", models.CharField(max_length=64)),
                ("image_name", models.CharField(max_length=256)),
                (
                    "environment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.environment",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="function",
            name="package",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="functions",
                to="core.package",
            ),
        ),
        migrations.CreateModel(
            name="EnvironmentUserRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("ADMIN", "admin"),
                            ("DEVELOPER", "developer"),
                            ("OPERATOR", "operator"),
                            ("READ_ONLY", "read_only"),
                        ],
                        max_length=64,
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "environment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_roles",
                        to="core.environment",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="environment",
            name="team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="environments",
                to="core.team",
            ),
        ),
        migrations.AddConstraint(
            model_name="teamuserrole",
            constraint=models.UniqueConstraint(
                fields=("user", "team"), name="unique_user_team"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["environment", "function"], name="task_environment_function"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["environment", "status"], name="task_environment_status"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["environment", "creator"], name="task_environment_creator"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["environment", "created_at"], name="task_environment_created_at"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["environment", "updated_at"], name="task_environment_updated_at"
            ),
        ),
        migrations.AddConstraint(
            model_name="package",
            constraint=models.UniqueConstraint(
                fields=("environment", "name"), name="environment_name_unique_together"
            ),
        ),
        migrations.AddConstraint(
            model_name="function",
            constraint=models.UniqueConstraint(
                fields=("package", "name"), name="package_name_unique_together"
            ),
        ),
        migrations.AddConstraint(
            model_name="environmentuserrole",
            constraint=models.UniqueConstraint(
                fields=("user", "environment"), name="unique_user_environment"
            ),
        ),
        migrations.AddConstraint(
            model_name="environment",
            constraint=models.UniqueConstraint(
                fields=("team", "name"), name="team_name_unique_together"
            ),
        ),
        migrations.AddConstraint(
            model_name="environment",
            constraint=models.UniqueConstraint(
                condition=models.Q(("default", True)),
                fields=("team", "default"),
                name="team_default_true_unique_together",
            ),
        ),
    ]
